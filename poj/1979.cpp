/**********************************************************************
 * author:      banbao                                                *
 * language:    c++/c                                                 *
 * link:        http://poj.org/problem?id=1979                        *
 **********************************************************************/

/*
 * bbq: 红地砖与黑地砖, dfs, 极大连通子图
*/

#include <stdio.h>
#include <string.h>
#include <malloc.h> 

char a[21][21];
int sum;
int C, R;

void dif(int _R, int _C) {
    if (_R > 0 && a[_R - 1][_C] == '.') {
        a[_R - 1][_C] = '@';
        sum++;
        dif(_R - 1, _C);
    }

    if (_R < R - 1 && a[_R + 1][_C] == '.') {
        a[_R + 1][_C] = '@';
        sum++;
        dif(_R + 1, _C);
    }

    if (_C > 0 && a[_R][_C - 1] == '.') {
        a[_R][_C - 1] = '@';
        sum++;
        dif(_R, _C - 1);
    }

    if (_C < C - 1 && a[_R][_C + 1] == '.') {
        a[_R][_C + 1] = '@';
        sum++;
        dif(_R, _C + 1);
    }
}

int main() {
    int _C, _R;
    int i, j;

    while (1) {
        sum = 1;
        scanf("%d%d", &C, &R);
        if (!C && !R)   break;
        getchar();
        for (i = 0; i < R; i++) {
            for (j = 0; j < C; j++) {
                scanf("%c", &a[i][j]);
                if (a[i][j] == '@') {
                    _C = j;
                    _R = i;
                }
            }
            getchar();
        }

        dif(_R, _C);
/*
        for(i=0;i<R;i++) {
            for(j=0;j<C;j++) {
                printf("%c",a[i][j]);
            }
            printf("\n");
        }
*/
        printf("%d\n", sum);
    }

    return 0;
}

/*
总时间限制: 1000ms 内存限制: 65536kB
描述
有一间长方形的房子，地上铺了红色、黑色两种颜色的正方形瓷砖。
你站在其中一块黑色的瓷砖上，只能向相邻的黑色瓷砖移动。
请写一个程序，计算你总共能够到达多少块黑色的瓷砖。
输入
包括多个数据集合。每个数据集合的第一行是两个整数W和H，分别表示x方向和y方向瓷砖的数量。
W和H都不超过20。在接下来的H行中，每行包括W个字符。每个字符表示一块瓷砖的颜色，规则如下
1）‘.’：黑色的瓷砖；
2）‘#’：白色的瓷砖；
3）‘@’：黑色的瓷砖，并且你站在这块瓷砖上。该字符在每个数据集合中唯一出现一次。
当在一行中读入的是两个零时，表示输入结束。
输出
对每个数据集合，分别输出一行，显示你从初始位置出发能到达的瓷砖数(记数时包括初始位置的瓷砖)。
样例输入
6 9
....#.
.....#
......
......
......
......
......
#@...#
.#..#.
0 0
样例输出
45
来源
1979
*/

/*

'.' - a black tile
'#' - a red tile
'@' - a man on a black tile(appears exactly once in a data set

Sample Input

6 9
....#.
.....#
......
......
......
......
......
#@...#
.#..#.
11 9
.#.........
.#.#######.
.#.#.....#.
.#.#.###.#.
.#.#..@#.#.
.#.#####.#.
.#.......#.
.#########.
...........
11 6
..#..#..#..
..#..#..#..
..#..#..###
..#..#..#@.
..#..#..#..
..#..#..#..
7 7
..#.#..
..#.#..
###.###
...@...
###.###
..#.#..
..#.#..
0 0
Sample Output

45
59
6
13
Source

Japan 2004 Domestic
*/
